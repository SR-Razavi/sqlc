([]interface {}) (len=1 cap=1) {
 (*ast.RawStmt)(0x14000279e00)({
  Stmt: (*ast.SelectStmt)(0x14000a5b3f0)({
   DistinctClause: (*ast.List)(0x14000a5e8a0)({
    Items: ([]ast.Node) <nil>
   }),
   IntoClause: (*ast.IntoClause)(<nil>),
   TargetList: (*ast.List)(0x14000a5e8b8)({
    Items: ([]ast.Node) (len=1 cap=1) {
     (*ast.ResTarget)(0x14000a575f0)({
      Name: (*string)(0x14000a46f20)((len=6) "is_one"),
      Indirection: (*ast.List)(0x14000a5e8d0)({
       Items: ([]ast.Node) <nil>
      }),
      Val: (*ast.CaseExpr)(0x14000a6abe0)({
       Xpr: (*ast.TODO)(0x1052dfa90)({
       }),
       Casetype: (ast.Oid) 0,
       Casecollid: (ast.Oid) 0,
       Arg: (*ast.TODO)(0x1052dfa90)({
       }),
       Args: (*ast.List)(0x14000a5e8e8)({
        Items: ([]ast.Node) (len=1 cap=1) {
         (*ast.CaseWhen)(0x140001c8d00)({
          Xpr: (*ast.TODO)(0x1052dfa90)({
          }),
          Expr: (*ast.A_Expr)(0x140001c8cc0)({
           Kind: (ast.A_Expr_Kind) 1,
           Name: (*ast.List)(0x14000a5e900)({
            Items: ([]ast.Node) (len=1 cap=1) {
             (*ast.String)(0x14000a46f30)({
              Str: (string) (len=1) "="
             })
            }
           }),
           Lexpr: (*ast.ColumnRef)(0x14000279d60)({
            Name: (string) "",
            Fields: (*ast.List)(0x14000a5e918)({
             Items: ([]ast.Node) (len=1 cap=1) {
              (*ast.String)(0x14000a46f50)({
               Str: (string) (len=2) "id"
              })
             }
            }),
            Location: (int) 94
           }),
           Rexpr: (*ast.ParamRef)(0x140001b0048)({
            Number: (int) 1,
            Location: (int) 99,
            Dollar: (bool) true
           }),
           Location: (int) 97
          }),
          Result: (*ast.TypeCast)(0x14000279da0)({
           Arg: (*ast.A_Const)(0x14000a5e930)({
            Val: (*ast.String)(0x14000a46f70)({
             Str: (string) (len=1) "t"
            }),
            Location: (int) 107
           }),
           TypeName: (*ast.TypeName)(0x14000719570)({
            Catalog: (string) "",
            Schema: (string) "",
            Name: (string) "",
            Names: (*ast.List)(0x14000a5e948)({
             Items: ([]ast.Node) (len=2 cap=2) {
              (*ast.String)(0x14000a46f80)({
               Str: (string) (len=10) "pg_catalog"
              }),
              (*ast.String)(0x14000a46fa0)({
               Str: (string) (len=4) "bool"
              })
             }
            }),
            TypeOid: (ast.Oid) 0,
            Setof: (bool) false,
            PctType: (bool) false,
            Typmods: (*ast.List)(0x14000a5e960)({
             Items: ([]ast.Node) <nil>
            }),
            Typemod: (int32) -1,
            ArrayBounds: (*ast.List)(0x14000a5e978)({
             Items: ([]ast.Node) <nil>
            }),
            Location: (int) -1
           }),
           Location: (int) -1
          }),
          Location: (int) 89
         })
        }
       }),
       Defresult: (*ast.TypeCast)(0x14000279de0)({
        Arg: (*ast.A_Const)(0x14000a5e990)({
         Val: (*ast.String)(0x14000a46fc0)({
          Str: (string) (len=1) "f"
         }),
         Location: (int) 119
        }),
        TypeName: (*ast.TypeName)(0x140007195e0)({
         Catalog: (string) "",
         Schema: (string) "",
         Name: (string) "",
         Names: (*ast.List)(0x14000a5e9a8)({
          Items: ([]ast.Node) (len=2 cap=2) {
           (*ast.String)(0x14000a46fd0)({
            Str: (string) (len=10) "pg_catalog"
           }),
           (*ast.String)(0x14000a46ff0)({
            Str: (string) (len=4) "bool"
           })
          }
         }),
         TypeOid: (ast.Oid) 0,
         Setof: (bool) false,
         PctType: (bool) false,
         Typmods: (*ast.List)(0x14000a5e9c0)({
          Items: ([]ast.Node) <nil>
         }),
         Typemod: (int32) -1,
         ArrayBounds: (*ast.List)(0x14000a5e9d8)({
          Items: ([]ast.Node) <nil>
         }),
         Location: (int) -1
        }),
        Location: (int) -1
       }),
       Location: (int) 81
      }),
      Location: (int) 81
     })
    }
   }),
   FromClause: (*ast.List)(0x14000a5e9f0)({
    Items: ([]ast.Node) (len=1 cap=1) {
     (*ast.RangeVar)(0x14000a57620)({
      Catalogname: (*string)(<nil>),
      Schemaname: (*string)(<nil>),
      Relname: (*string)(0x14000a47030)((len=3) "foo"),
      Inh: (bool) true,
      Relpersistence: (uint8) 112,
      Alias: (*ast.Alias)(<nil>),
      Location: (int) 141
     })
    }
   }),
   WhereClause: (*ast.TODO)(0x1052dfa90)({
   }),
   GroupClause: (*ast.List)(0x14000a5ea08)({
    Items: ([]ast.Node) <nil>
   }),
   HavingClause: (*ast.TODO)(0x1052dfa90)({
   }),
   WindowClause: (*ast.List)(0x14000a5ea20)({
    Items: ([]ast.Node) <nil>
   }),
   ValuesLists: (*ast.List)(0x14000a5ea38)({
    Items: ([]ast.Node) <nil>
   }),
   SortClause: (*ast.List)(0x14000a5ea50)({
    Items: ([]ast.Node) <nil>
   }),
   LimitOffset: (*ast.TODO)(0x1052dfa90)({
   }),
   LimitCount: (*ast.TODO)(0x1052dfa90)({
   }),
   LockingClause: (*ast.List)(0x14000a5ea68)({
    Items: ([]ast.Node) <nil>
   }),
   WithClause: (*ast.WithClause)(<nil>),
   Op: (ast.SetOperation) None,
   All: (bool) false,
   Larg: (*ast.SelectStmt)(<nil>),
   Rarg: (*ast.SelectStmt)(<nil>)
  }),
  StmtLocation: (int) 36,
  StmtLen: (int) 108
 })
}
